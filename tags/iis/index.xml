<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>iis on Joe Buschmann</title>
    <link>/tags/iis/</link>
    <description>Recent content in iis on Joe Buschmann</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; Joe Buschmann 2020</copyright>
    <lastBuildDate>Sat, 14 Nov 2015 23:33:47 +0000</lastBuildDate>
    
	<atom:link href="/tags/iis/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Two Tips for Debugging Apps in IIS</title>
      <link>/posts/2015/11/two-tips-for-debugging-apps-in-iis/</link>
      <pubDate>Sat, 14 Nov 2015 23:33:47 +0000</pubDate>
      
      <guid>/posts/2015/11/two-tips-for-debugging-apps-in-iis/</guid>
      <description>If you develop web sites or services hosted in IIS, here are two tips to make debugging on your development machine easier.
Disable Health Monitoring IIS application pools have health monitoring built in to ensure processes are responding to requests in a timely manner. If a process stops responding after a period of time, IIS will kill it. This is really inconvenient when you&#39;re debugging web apps in your dev environment, and IIS ends your session.</description>
    </item>
    
    <item>
      <title>Automating IIS Configuration Using AppCmd.exe</title>
      <link>/posts/2014/06/automating-iis-configuration-using-appcmd.exe/</link>
      <pubDate>Mon, 02 Jun 2014 14:04:48 +0000</pubDate>
      
      <guid>/posts/2014/06/automating-iis-configuration-using-appcmd.exe/</guid>
      <description>A couple weeks ago I wrote a script to completely automate the set up of IIS for some system tests at work. The tests require three IIS applications along with unique application pools, and the applications need to be segregated under a virtual directory to isolate them from other automated tests. This was done for a local set up for application developers.
This simple script took what could have been an error prone manual process and made it quick and mostly fool proof.</description>
    </item>
    
  </channel>
</rss>